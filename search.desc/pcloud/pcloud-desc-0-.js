searchState.loadedDescShard("pcloud", 0, "pCloud API Client Library\nUses a personal access token.\nWithout authentication, used for getting a digest\nUses an authorization token.\nHTTP client used to interact with the pCloud API.\nAuthentication credentials used for pCloud API requests.\nAn I/O error occurred while downloading a file.\nBase URL for the EU region.\nContains the error value\nErrors that can occur when using the pCloud client or …\nEurope region endpoint\nContains the success value\nAn error response from the API, including status code and …\nRepresents a pCloud API region.\nA network-related error from the underlying HTTP client.\nA type alias for results returned by pCloud API operations.\nAn error occurred while parsing a JSON response.\nBase URL for the US region.\nAn I/O error occurred while uploading a file.\nUnited States region endpoint\nUses a username and password for authentication.\nUses a username and password for authentication.\nCreates credentials using an access token.\nCreates an anonymous credential\nCreates credentials using an authorization token.\nCreates a new <code>ClientBuilder</code> instance for custom …\nCreates a new folder inside the specified parent folder on …\nCreates a new folder if it does not already exist in the …\nDeletes a file from pCloud.\nDeletes an empty folder from pCloud.\nRecursively deletes a folder and all of its contents from …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAttempts to create a <code>Region</code> from the <code>PCLOUD_REGION</code> …\nCreates a credential based on the environment variables\nModule handling general operations …\nGets an audio link using only the file identifier, without …\nGets an audio link using both the file identifier and …\nGenerates an authentication digest, valid for 30 seconds.\nRetrieves the checksums and metadata for a file on pCloud.\nGets a file link using only the file identifier, without …\nGets a file link using both the file identifier and …\nGenerate a new token based on the provided credentials\nGets a video link using only the file identifier, without …\nGets a video link using both the file identifier and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLists the contents of a folder on pCloud.\nLists the contents of a folder with custom options.\nMoves a file to a different folder on pCloud.\nMoves a folder to a new location in pCloud.\nCreates a new <code>Client</code> with the specified base URL and …\nRenames a file on pCloud.\nRenames an existing folder in pCloud.\nUpdate the credentials of the client\nUploads multiple files to a specified folder on pCloud.\nFetches the information about the current user.\nCreates credentials using a username and password.\nTake ownership of the client and update the credentials\nBuilder for constructing a <code>Client</code> with custom …\nErrors that may occur during client configuration and …\nReturned when the underlying HTTP client could not be …\nBuilds the <code>Client</code> with the configured options.\nCreates a new <code>ClientBuilder</code> with default settings:\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a builder pre-configured using environment …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets a custom base URL.\nSets a custom <code>reqwest::ClientBuilder</code>.\nSets the credentials for API authentication.\nSets the API region.\nSets a custom base URL and returns the modified builder.\nSets a custom <code>reqwest::ClientBuilder</code> and returns the …\nSets the credentials and returns the modified builder.\nSets the API region and returns the modified builder.\nThe representation of what can be returned by the PCloud …\nA set of shared fields between <code>File</code> and <code>Folder</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA structure representing a file stored on pCloud.\nA file ID assigned by pCloud.\nA file identifier used in API calls.\nResponse returned when moving or copying a file.\nA file path (e.g., <code>&quot;folder/subfolder/file.txt&quot;</code>).\nBase metadata common to all entries (files and folders).\nThe MIME type of the file (e.g., <code>&quot;image/jpeg&quot;</code>, …\nCreates a <code>FileIdentifier</code> from a file ID.\nThe unique file ID assigned by pCloud.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nA hash of the file content (may be used for caching or …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMetadata of the resulting file after the operation.\nCreates a <code>FileIdentifier</code> from a path.\nThe size of the file in bytes.\nRepresents the checksum information for a file stored on …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBuilder for uploading multiple files to pCloud.\nResponse returned by the <code>uploadfile</code> endpoint when …\nAdds a file from a raw body to the upload.\nAdds a file stream to the upload.\nThe IDs of the uploaded files.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMetadata for each uploaded file.\nAdds a file from a raw body and returns the updated …\nAdds a file stream to the upload and returns the updated …\nA structure representing a folder in pCloud.\nA folder is identified by its unique folder ID.\nEnumeration for identifying a folder by either its path or …\nA folder is identified by its path.\nMetadata common to all entries in pCloud.\nA list of contents inside the folder (files and …\nFinds an entry (file or folder) by its name inside the …\nFinds a file by its name inside the folder.\nFinds a subfolder by its name inside the folder.\nCreate a folder identifier using a folder ID.\nThe unique folder ID.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a folder identifier using a path.\nResult payload from a recursive folder deletion request.\nThe total number of files deleted.\nThe total number of folders deleted.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nOptions for customizing folder listing behavior.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nExcludes files from the listing (folders only).\nExcludes shared items from the listing.\nEnables recursive listing of folder contents.\nEnables showing deleted files and folders in the response.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA struct representing an individual streaming link, built …\nA struct that represents a list of streaming links with …\nThe expiration date and time of the streaming links.\nReturns the first streaming link using the first host in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe list of available host URLs for streaming.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the last streaming link using the last host in the …\nReturns an iterator over all available streaming links.\nThe path to the resource to be streamed.\nParameters for retrieving an audio file link, including …\nAudio bit rate in kilobits per second (from 16 to 320).\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSets the audio bit rate for the link.\nSets the <code>force_download</code> flag.\nSets the audio bit rate and returns the updated …\nSets the <code>force_download</code> flag and returns the updated …\nParameters for retrieving a file link, including options …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSets the content type for the file link.\nSets the <code>force_download</code> flag.\nSets the maximum download speed for the file.\nSets the <code>skip_filename</code> flag.\nSets the content type and returns the updated …\nSets the <code>force_download</code> flag and returns the updated …\nSets the maximum download speed and returns the updated …\nSets the <code>skip_filename</code> flag and returns the updated …\nParameters for retrieving a video file link, including …\nAudio bit rate in kilobits per second (from 16 to 320).\nIf set to true, disables adaptive streaming and forces the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nResolution of the video in the format WIDTHxHEIGHT (e.g., …\nSets the audio bit rate for the video link.\nSets the <code>fixed_bit_rate</code> flag.\nSets the resolution for the video link.\nSets the video bit rate for the video link.\nVideo bit rate in kilobits per second (from 16 to 4000).\nSets the audio bit rate and returns the updated …\nSets the <code>fixed_bit_rate</code> flag and returns the updated …\nSets the resolution and returns the updated …\nSets the video bit rate and returns the updated …")